# Prometheus Configuration for RAN LLM Claude Flow Monitoring
# Targets: M3 Max utilization (128GB), IPC latency (<100μs), throughput (25+ docs/hour)

global:
  scrape_interval: 5s
  evaluation_interval: 10s
  external_labels:
    cluster: 'ran-llm-pipeline'
    environment: 'production'

# Alerting configuration
rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - localhost:9093

# Scrape configurations for different components
scrape_configs:
  # Rust Core Performance Metrics (60GB M3 Max allocation)
  - job_name: 'rust-core'
    static_configs:
      - targets: ['localhost:8080']
    scrape_interval: 1s
    metrics_path: '/metrics'
    params:
      format: ['prometheus']

  # Python ML Engine Metrics (45GB MLX allocation)
  - job_name: 'python-ml'
    static_configs:
      - targets: ['localhost:8081']
    scrape_interval: 2s
    metrics_path: '/metrics'
    params:
      format: ['prometheus']

  # IPC Communication Metrics (15GB shared memory)
  - job_name: 'ipc-protocol'
    static_configs:
      - targets: ['localhost:8082']
    scrape_interval: 500ms  # High frequency for <100μs latency monitoring
    metrics_path: '/ipc/metrics'

  # System Resource Monitoring (M3 Max 128GB total)
  - job_name: 'system-resources'
    static_configs:
      - targets: ['localhost:9100']
    scrape_interval: 2s

  # Document Processing Pipeline Metrics
  - job_name: 'document-pipeline'
    static_configs:
      - targets: ['localhost:8083']
    scrape_interval: 3s
    metrics_path: '/pipeline/metrics'

  # Quality Validator Metrics (>0.75 target)
  - job_name: 'quality-validator'
    static_configs:
      - targets: ['localhost:8084']
    scrape_interval: 5s
    metrics_path: '/quality/metrics'

  # Bottleneck Detection System
  - job_name: 'bottleneck-analyzer'
    static_configs:
      - targets: ['localhost:8085']
    scrape_interval: 1s
    metrics_path: '/bottleneck/metrics'

  # MCP Server Metrics
  - job_name: 'mcp-server'
    static_configs:
      - targets: ['localhost:8086']
    scrape_interval: 3s
    metrics_path: '/mcp/metrics'

# Remote write for long-term storage
remote_write:
  - url: "http://localhost:9090/api/v1/write"
    queue_config:
      max_samples_per_send: 10000
      batch_send_deadline: 5s

# Storage configuration for high-frequency metrics
storage:
  tsdb:
    retention.time: 7d
    retention.size: 10GB
    out_of_order_time_window: 10m