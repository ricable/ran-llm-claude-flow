# Comprehensive Performance Monitoring Configuration
# High-performance monitoring system for hybrid Rust-Python pipeline

# Core metrics collection settings
collection_interval_ms: 100  # 100ms for high-frequency monitoring (sub-1% overhead)
analysis_interval_ms: 1000   # 1s for bottleneck analysis
max_history_size: 10000      # Keep 10,000 metric snapshots in memory

# Real-time dashboard configuration
dashboard:
  enabled: true
  port: 8080
  bind_address: "0.0.0.0"
  websocket_enabled: true
  update_interval_seconds: 1
  historical_charts: true
  chart_time_ranges: [5, 15, 60, 240]  # 5min, 15min, 1hr, 4hr

# Alert system configuration
alerts:
  enabled: true
  cooldown_seconds: 300    # 5 minutes between similar alerts
  max_alerts_per_minute: 10
  
  # Alert severity thresholds
  severity_thresholds:
    cpu_utilization: 85.0     # CPU % threshold
    memory_utilization: 90.0  # Memory % threshold
    ipc_latency_ms: 10.0      # IPC latency threshold
    document_rate: 20.0       # Minimum docs/hour
    error_rate: 1.0           # Maximum error %
    disk_usage: 90.0          # Disk usage %
  
  # Alert channels
  channels:
    - channel_type: "log"
      min_severity: "medium"
      config:
        level: "warn"
    
    - channel_type: "webhook"
      min_severity: "high" 
      config:
        url: "http://localhost:3001/alerts"
        timeout_seconds: 10
        retry_attempts: 3
    
    # Uncomment for email alerts
    # - channel_type: "email"
    #   min_severity: "critical"
    #   config:
    #     recipients: ["ops@company.com", "dev-team@company.com"]
    #     smtp_server: "smtp.company.com"
    #     smtp_port: 587

# Performance targets for the pipeline
targets:
  document_processing_rate: 25.0  # Target: 20-30 docs/hour
  rust_memory_limit: 60.0         # GB - Rust process memory limit
  python_memory_limit: 45.0       # GB - Python process memory limit  
  shared_memory_limit: 15.0       # GB - Shared memory limit
  ipc_latency_p99: 10.0           # ms - Target IPC latency
  max_error_rate: 1.0             # % - Maximum acceptable error rate
  max_cpu_utilization: 85.0       # % - Maximum CPU usage
  model_inference_time: 500.0     # ms - Target inference time

# Adaptive optimization settings
optimization:
  enabled: true
  min_improvement_threshold: 0.1   # 10% minimum improvement to apply
  max_implementation_cost: 0.3     # 30% maximum cost acceptable
  predictive_enabled: true
  learning_rate: 0.01
  enabled_strategies:
    - "concurrency_adjustment"
    - "memory_rebalancing" 
    - "ipc_optimization"
    - "pipeline_tuning"
    - "model_selection"
    - "cache_optimization"

# Logging configuration
logging:
  level: "info"                    # trace, debug, info, warn, error
  structured: true                 # JSON format logs
  file_path: "logs/monitoring.log" # Optional log file
  max_file_size_mb: 100
  max_files: 5
  include_metrics: false           # Include raw metrics in logs