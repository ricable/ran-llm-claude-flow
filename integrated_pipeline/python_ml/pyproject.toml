[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "python-ml-engine"
version = "1.0.0"
description = "Python ML Engine for Hybrid Rust-Python Pipeline"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Claude Code", email = "noreply@anthropic.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

dependencies = [
    # Core ML dependencies
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    
    # MLX for Apple Silicon (optional)
    "mlx>=0.5.0; platform_system=='Darwin'",
    "mlx-lm>=0.3.0; platform_system=='Darwin'",
    
    # Data processing
    "pandas>=2.0.0",
    "datasets>=2.12.0",
    "jsonlines>=3.1.0",
    
    # Performance and utilities
    "asyncio>=3.4.3",
    "aiofiles>=23.0.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
    
    # Configuration
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    
    # Logging and monitoring
    "structlog>=23.1.0",
    "rich>=13.4.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.3.0"
]

performance = [
    "accelerate>=0.20.0",
    "optimum>=1.8.0",
    "tensorboard>=2.13.0",
    "wandb>=0.15.0"
]

all = [
    "python-ml-engine[dev,performance]"
]

[project.urls]
Homepage = "https://github.com/ruvnet/claude-flow"
Repository = "https://github.com/ruvnet/claude-flow"
Issues = "https://github.com/ruvnet/claude-flow/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m "not slow"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "mlx: marks tests that require MLX (Apple Silicon only)"
]
filerrors = "ignore::DeprecationWarning"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod"
]
